# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

#TODO: we need an app to update a protected branch
# https://github.com/orgs/community/discussions/13836#discussioncomment-8535364

name: Upload Python Test Pypi Package

on:
  push:
    branches:
      - feat/pipelines/automatic-version-change

permissions:
  contents: read

jobs:

  # TODO: update the version automatically by the action instead of making sure it's correct during the PR CI
  # https://stackoverflow.com/questions/69263843/how-to-push-to-protected-main-branches-in-a-github-action

  set-version:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Start set_new_version.sh script
      run : ./.github/scripts/set_new_version.sh

  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
